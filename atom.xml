<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>星宿长安</title>
  <icon>https://la4am12.github.io/icon.png</icon>
  
  <link href="https://la4am12.github.io/atom.xml" rel="self"/>
  
  <link href="https://la4am12.github.io/"/>
  <updated>2022-12-26T02:02:48.157Z</updated>
  <id>https://la4am12.github.io/</id>
  
  <author>
    <name>La4am&amp;12</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Mit6.824 lab3 实现思路</title>
    <link href="https://la4am12.github.io/2022/12/24/mit824lab3/"/>
    <id>https://la4am12.github.io/2022/12/24/mit824lab3/</id>
    <published>2022-12-24T09:00:07.000Z</published>
    <updated>2022-12-26T02:02:48.157Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;Part-A-Key-x2F-value-service-without-snapshots&quot;&gt;&lt;a href=&quot;#Part-A-Key-x2F-value-service-without-snapshots&quot; class=&quot;headerlink&quot; title=&quot;Part A: Key&amp;#x2F;value service without snapshots&quot;&gt;&lt;/a&gt;&lt;strong&gt;Part A: Key&amp;#x2F;value service without snapshots&lt;/strong&gt;&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;The kvserver code submits the Put&amp;#x2F;Append&amp;#x2F;Get operation to Raft, so that the Raft log holds a sequence of Put&amp;#x2F;Append&amp;#x2F;Get operations. All of the kvservers execute operations from the Raft log in order, applying the operations to their key&amp;#x2F;value databases.&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="course lab" scheme="https://la4am12.github.io/tags/course-lab/"/>
    
    <category term="raft" scheme="https://la4am12.github.io/tags/raft/"/>
    
  </entry>
  
  <entry>
    <title>Vim Memo List</title>
    <link href="https://la4am12.github.io/2022/12/06/Vim%20Memo%20List/"/>
    <id>https://la4am12.github.io/2022/12/06/Vim%20Memo%20List/</id>
    <published>2022-12-06T08:45:07.000Z</published>
    <updated>2022-12-19T03:29:37.152Z</updated>
    
    
    <summary type="html">&lt;p&gt;…&lt;/p&gt;</summary>
    
    
    
    
    <category term="Vim" scheme="https://la4am12.github.io/tags/Vim/"/>
    
    <category term="VSCode" scheme="https://la4am12.github.io/tags/VSCode/"/>
    
  </entry>
  
  <entry>
    <title>Bitcoin: A Peer-to-Peer Electronic Cash System</title>
    <link href="https://la4am12.github.io/2022/11/22/bitcoin/"/>
    <id>https://la4am12.github.io/2022/11/22/bitcoin/</id>
    <published>2022-11-22T07:55:07.000Z</published>
    <updated>2022-12-06T14:32:50.583Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;Abstract&quot;&gt;&lt;a href=&quot;#Abstract&quot; class=&quot;headerlink&quot; title=&quot;Abstract&quot;&gt;&lt;/a&gt;Abstract&lt;/h2&gt;&lt;p&gt;A purely peer-to-peer version of electronic cash would allow online payments to be sent directly from one party to another without going through a financial institution.&lt;/p&gt;
&lt;p&gt;We propose a solution to the double-spending problem using a peer-to-peer network.&lt;/p&gt;</summary>
    
    
    
    
    <category term="分布式" scheme="https://la4am12.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
    <category term="区块链" scheme="https://la4am12.github.io/tags/%E5%8C%BA%E5%9D%97%E9%93%BE/"/>
    
    <category term="比特币" scheme="https://la4am12.github.io/tags/%E6%AF%94%E7%89%B9%E5%B8%81/"/>
    
  </entry>
  
  <entry>
    <title>Raft论文阅读</title>
    <link href="https://la4am12.github.io/2022/04/12/raft/"/>
    <id>https://la4am12.github.io/2022/04/12/raft/</id>
    <published>2022-04-12T08:45:07.000Z</published>
    <updated>2022-12-19T03:24:03.372Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Strong Leader：比如日志只从 Leader 发送给其他服务器。这种方式简化了对复制日志的管理并且使得 Raft 算法更加易于理解。&lt;/li&gt;
&lt;li&gt;Leader election：使用随机计时器来选举领导人，解决冲突时会更加简单快捷&lt;/li&gt;&lt;/ul&gt;</summary>
    
    
    
    
    <category term="分布式" scheme="https://la4am12.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
    <category term="算法" scheme="https://la4am12.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Paxos算法介绍</title>
    <link href="https://la4am12.github.io/2022/04/07/paxos/"/>
    <id>https://la4am12.github.io/2022/04/07/paxos/</id>
    <published>2022-04-07T02:58:30.000Z</published>
    <updated>2022-11-22T07:57:22.738Z</updated>
    
    
    <summary type="html">&lt;p&gt;在该一致性算法中，有三种参与角色，Proposer、Acceptor 和 Learner&lt;/p&gt;</summary>
    
    
    
    
    <category term="分布式" scheme="https://la4am12.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
    <category term="算法" scheme="https://la4am12.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>GFS论文阅读</title>
    <link href="https://la4am12.github.io/2022/04/03/GFS/"/>
    <id>https://la4am12.github.io/2022/04/03/GFS/</id>
    <published>2022-04-03T03:27:07.000Z</published>
    <updated>2022-11-22T07:56:48.907Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h2&gt;&lt;p&gt;Google File System，一种专有分布式文件系统。GFS为在廉价商用设备上运行提供了容错能力，并可以在有大量客户端的情况下提供较高的整体性能。&lt;/p&gt;</summary>
    
    
    
    
    <category term="分布式" scheme="https://la4am12.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
    <category term="存储" scheme="https://la4am12.github.io/tags/%E5%AD%98%E5%82%A8/"/>
    
  </entry>
  
  <entry>
    <title>MapReduce论文阅读</title>
    <link href="https://la4am12.github.io/2022/04/01/MapReduce/"/>
    <id>https://la4am12.github.io/2022/04/01/MapReduce/</id>
    <published>2022-04-01T02:58:30.000Z</published>
    <updated>2022-11-22T07:57:01.840Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;Introduction&lt;/h2&gt;&lt;p&gt;对于大数据量任务的处理，要想在可接受的时间内完成运算，只有将这些计算分布在成百上千的主机上。如何处理并行计算、如何分发数据、如何处理错误？所有这些问题综合在一起，需要大量的代码处理，因此也使得原本简单的运算变得难以处理。&lt;/p&gt;
&lt;p&gt;为了解决上述复杂的问题，我们设计一个新的抽象模型，使用这个抽象模型，我们只要表述我们想要执行的简单运算即可，而不必关心并行计算、容错、数据分布、负载均衡等复杂的细节，这些问题都被封装在了一个库里面—MapReduce。&lt;/p&gt;</summary>
    
    
    
    
    <category term="分布式" scheme="https://la4am12.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
    <category term="大数据" scheme="https://la4am12.github.io/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
  </entry>
  
  <entry>
    <title>二进制炸弹</title>
    <link href="https://la4am12.github.io/2020/11/01/BinaryBomb/"/>
    <id>https://la4am12.github.io/2020/11/01/BinaryBomb/</id>
    <published>2020-11-01T07:55:07.000Z</published>
    <updated>2022-12-06T14:42:49.964Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近上系统级编程的课，其中一个实验是破解二进制炸弹，下面记录一下解题思路。&lt;/p&gt;</summary>
    
    
    
    
    <category term="cs" scheme="https://la4am12.github.io/tags/cs/"/>
    
    <category term="gdb" scheme="https://la4am12.github.io/tags/gdb/"/>
    
  </entry>
  
</feed>
